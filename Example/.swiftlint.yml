#项目目录下校验自定义规则文件适用指令: $swiftlint lint --config .swiftlint.yml
#常用指令: $swiftlint autocorrect // 自动修正
disabled_rules: # 执行时排除掉的规则
#  - colon
#  - comma
  - control_statement
  - identifier_name # 参数变量命名规则 #命名规则必须按照驼峰原则
  - type_name
  - orphaned_doc_comment  # 文档注释
#  - trailing_whitespace # 行末尾不加空格
opt_in_rules: # 一些规则仅仅是可选的
  #- empty_count
  #- missing_docs
  # 可以通过执行如下指令来查找所有可用的规则:
  # swiftlint rule
included: # 执行 linting 时包含的路径。如果出现这个 `--path` 会被忽略。
  - HBSwiftKit
excluded: # 执行 linting 时忽略的路径。 优先级比 `included` 更高。
  - Pods
  - HBSwiftKit_Tests
  - HBSwiftKit/Resources

#use_nested_configs: true
# 可配置的规则可以通过这个配置文件来自定义
# 二进制规则可以设置他们的严格程度
force_cast: warning # 隐式
force_try:
  severity: warning # 显式
# 同时有警告和错误等级的规则，可以只设置它的警告等级
# 隐式
line_length: 300
# 可以通过一个数组同时进行隐式设置
type_body_length:
  - 300 # warning
  - 400 # error
# 或者也可以同时进行显式设置
file_length:
  warning: 800
  error: 1200
# 命名规则可以设置最小长度和最大程度的警告/错误
# 此外它们也可以设置排除在外的名字
#type_name:
#  min_length: 2 # 只是警告
#  max_length: # 警告和错误
#    warning: 40
#    error: 50
#  excluded: iPhone # 排除某个名字
#identifier_name:
#  min_length: 1# 只有最小长度
#    error: 4 # 只有错误
#  excluded: # 排除某些名字
#    - id
#    - URL
#    - GlobalAPIKey
reporter: "xcode" # 报告类型 (xcode, json, csv, checkstyle, codeclimate, junit, html, emoji, sonarqube, markdown, github-actions-logging)

